/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layers
#define COLEMAK 0
#define MOD_ARR 1
#define NAVIGAT 2
#define FUN_NUM 3
#define SYMBOLS 4
#define COMPOSE 5
#define WM_WIN  6
#define STENO   7

// Keycodes
#define xxxxx &none

//  Layers
//    Left
#define LT_D &lt SYMBOLS D
#define LT_SFT &lsk MOD_ARR LSHFT
#define LT_BSPC &lt FUN_NUM BSPC
//    Right
#define LT_H &lt SYMBOLS H
#define LT_RET &lt FUN_NUM RET
#define LT_SPACE &lt MOD_ARR SPACE
#define LT_ESC &tyl COMPOSE ESC


&lt {
    quick-tap-ms = <300>;
};

&nice_view_spi {
    cs-gpios = <&pro_micro 1 GPIO_ACTIVE_HIGH>;
};

/ {
        macros {
            ZMK_MACRO(AE,
                wait-ms = <10>;
                tap-ms = <20>;
                bindings
                    = <&macro_press &kp RALT>
                    , <&macro_tap &kp Q>
                    , <&macro_release &kp RALT>
                    ;
            )

            ZMK_MACRO(SZ,
                wait-ms = <10>;
                tap-ms = <20>;
                bindings
                    = <&macro_press &kp RALT>
                    , <&macro_tap &kp S>
                    , <&macro_release &kp RALT>
                    ;
            )

            ZMK_MACRO(EE,
                wait-ms = <10>;
                tap-ms = <20>;
                bindings
                    = <&macro_press &kp RALT>
                    , <&macro_tap &kp E>
                    , <&macro_release &kp RALT>
                    ;
            )

            ZMK_MACRO(IE,
                wait-ms = <10>;
                tap-ms = <20>;
                bindings
                    = <&macro_press &kp RALT>
                    , <&macro_tap &kp I>
                    , <&macro_release &kp RALT>
                    ;
            )

            ZMK_MACRO(UE,
                wait-ms = <10>;
                tap-ms = <20>;
                bindings
                    = <&macro_press &kp RALT>
                    , <&macro_tap &kp Y>
                    , <&macro_release &kp RALT>
                    ;
            )

            ZMK_MACRO(OE,
                wait-ms = <10>;
                tap-ms = <20>;
                bindings
                    = <&macro_press &kp RALT>
                    , <&macro_tap &kp P>
                    , <&macro_release &kp RALT>
                    ;
            )

            ZMK_MACRO(ploggle,
                wait-ms = <10>;
                tap-ms = <20>;
                bindings
                    = <&tog STENO>
                    , <&macro_press &kp E &kp R &kp F &kp V &kp O &kp L>
                    , <&macro_release &kp E &kp R &kp F &kp V &kp O &kp L>
                    ;
            )

            exposee_win: wm_win_exposee {
                compatible = "zmk,behavior-macro";
                label = "Win10 Exposee";
                #binding-cells = <0>;
                wait-ms = <10>;
                tap-ms = <20>;
                bindings
                    = <&macro_press &kp LGUI>
                    , <&macro_tap &kp TAB>
                    , <&macro_release &kp LGUI>
                    ;
            };

            prev_desktop_win: wm_win_prev_desktop {
                compatible = "zmk,behavior-macro";
                label = "Win10 Go To Previous Desktop";
                #binding-cells = <0>;
                wait-ms = <10>;
                tap-ms = <20>;
                bindings
                    = <&macro_press &kp LCTRL>
                    , <&macro_press &kp LGUI>
                    , <&macro_tap &kp LEFT>
                    , <&macro_release &kp LGUI>
                    , <&macro_release &kp LCTRL>
                    ;
            };

            next_desktop_win: wm_win_next_desktop {
                compatible = "zmk,behavior-macro";
                label = "Win10 Go To Next Desktop";
                #binding-cells = <0>;
                wait-ms = <10>;
                tap-ms = <20>;
                bindings
                    = <&macro_press &kp LCTRL>
                    , <&macro_press &kp LGUI>
                    , <&macro_tap &kp RIGHT>
                    , <&macro_release &kp LGUI>
                    , <&macro_release &kp LCTRL>
                    ;
            };
        };

        behaviors {
            lhs: left_hand_shift {
                compatible = "zmk,behavior-hold-tap";
                label = "Left-Hand Shift";
                #binding-cells = <2>;
                tapping-term-ms = <160>;
                flavor = "balanced";
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 39 40 41>;    // <---[[right-hand keys]]
            };

            rhs: right_hand_shift {
                compatible = "zmk,behavior-hold-tap";
                label = "Right-Hand Shift";
                #binding-cells = <2>;
                tapping-term-ms = <160>;
                flavor = "balanced";
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 36 37 38>;    // <---[[left-hand keys]]
            };

            hrm: home_row_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "Home Row Mods";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };

            lte: layer_tab_exposee {
                compatible = "zmk,behavior-hold-tap";
                label = "Layer-tap the exposee macro";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                bindings = <&mo>, <&exposee_win>;
            };

            lsk: layer_sticky_key {
                compatible = "zmk,behavior-hold-tap";
                label = "Layer-tap a sticky key";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                flavor = "tap-preferred";
                bindings = <&mo>, <&skq>;
            };

            skq: sticky_key_quick_release {
                compatible = "zmk,behavior-sticky-key";
                label = "Sticky key with quick release";
                #binding-cells = <1>;
                bindings = <&kp>;
                release-after-ms = <1000>;
                quick-release;
            };

            tyl: typing_layer {
                compatible = "zmk,behavior-hold-tap";
                label = "Prefer fluid typing of layered keys";
                #binding-cells = <2>;
                tapping-term-ms = <160>;
                flavor = "hold-preferred";
                bindings = <&mo>, <&kp>;
            };
        };

        keymap {
            compatible = "zmk,keymap";

            colemak {
                label = "Colemak";
                bindings = <
//             ------------------------------------------------------------------          -------------------------------------------------------------------------------
//             |     Q      |     W      |     F      |     P      |     B      |          |     J      |     L      |     U      |     Y      |     ;      |  PLOGGLE   |
//             |     A      |     R      |     S      |     T      |     G      |          |     M      |     N      |     E      |     I      |     O      |            |
//             |     Z      |     X      |     C      |     D      |     V      |          |     K      |     H      |     ,      |     .      |     /      |            |
//             --------------------------|     WM     |    BSP     |    TAB     |          |    ENT     |    SPC     |    ESC     |---------------------------------------
//                                       ----------------------------------------          ---------------------------------------
    xxxxx        &kp Q        &kp W        &kp F        &kp P        &kp B                  &kp J        &kp L        &kp U        &kp Y        &kp SEMI     &ploggle
    xxxxx        &hrm LALT A  &hrm LGUI R  &hrm LCTRL S &hrm LSHFT T &kp G                  &kp M        &hrm RSHFT N &hrm RCTRL E &hrm RGUI I  &hrm LGUI O  xxxxx
    xxxxx        &kp Z        &kp X        &kp C        LT_D         &kp V                  &kp K        LT_H         &kp COMMA    &kp DOT      &kp FSLH     xxxxx
                                           &lte WM_WIN 0 LT_SFT      LT_BSPC                LT_RET       LT_SPACE     &sl COMPOSE
                >;
            };

            mod_arr {
                label = "Mod|Arr";
                bindings = <
//             ------------------------------------------------------------------          ------------------------------------------------------------------
//             |            |            |            |            |            |          |            |            |            |            |            |
//             |            |            |            |   CAPS     |            |          |   LEFT     |    DOWN    |     UP     |   RIGHT    |            |
//             |            |            |            |   NAV      |            |          |            |            |            |            |            |
//             --------------------------|            |            |    DEL     |          |   ESC      |    TAB     |            |--------------------------
//                                       ----------------------------------------          ---------------------------------------
    xxxxx        &none        &none        &none        &none        &none                   &none        &none        &none        &none        &none        xxxxx
    xxxxx        &none        &none        &none        &none        &none                   &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &none        xxxxx
    xxxxx        &none        &none        &none        &mo NAVIGAT  &none                   &none        &none        &none        &none        &none        xxxxx
                                           &none        &caps_word   &kp DEL                 &kp ESC      &kp TAB      &none
                >;
            };

            navigat {
                label = "Navigat";
                bindings = <
//             ------------------------------------------------------------------          ------------------------------------------------------------------
//             |            |            |            |            |            |          |            |            |            |            |            |
//             |            |            |            |            |            |          |    HOME    |   PG DN    |   PG UP    |    END     |            |
//             |            |            |            |            |            |          |            |            |            |            |            |
//             --------------------------|            |            |            |          |            |            |            |--------------------------
//                                       ----------------------------------------          ---------------------------------------
    xxxxx        &none        &none        &none        &none        &none                   &none        &none        &none        &none        &none        xxxxx
    xxxxx        &none        &none        &none        &none        &none                   &kp HOME     &kp PG_DN    &kp PG_UP    &kp END      &none        xxxxx
    xxxxx        &none        &none        &none        &none        &none                   &none        &none        &none        &none        &none        xxxxx
                                           &none        &none        &none                   &none        &none        &none
                >;
            };

            fun_num {
                label = "Fun|Num";
                bindings = <
//             ------------------------------------------------------------------          ------------------------------------------------------------------
//             |            |     F4     |     F3     |     F2     |     F1     |          |            |     7      |     8      |     9      |     -      |
//             |            |     F8     |     F7     |     F6     |     F5     |          |     '      |     4      |     5      |     6      |     =      |
//             |            |     F12    |     F11    |     F10    |     F9     |          |     `      |     1      |     2      |     3      |     \      |
//             --------------------------|            |            |            |          |     0      |     0      |     .      |--------------------------
//                                       ----------------------------------------          ---------------------------------------
    xxxxx        &none        &kp F4       &kp F3       &kp F2       &kp F1                  &none        &kp N7       &kp N8       &kp N9       &kp MINUS    xxxxx
    xxxxx        &none        &kp F8       &kp F7       &kp F6       &kp F5                  &kp SQT      &kp N4       &kp N5       &kp N6       &kp EQUAL    xxxxx
    xxxxx        &none        &kp F12      &kp F11      &kp F10      &kp F9                  &kp GRAVE    &kp N1       &kp N2       &kp N3       &kp BSLH     xxxxx
                                           &none        &none        &none                   &kp N0       &kp N0       &kp DOT
                >;
            };

            symbols {
                label = "Symbols";
                bindings = <
//             ------------------------------------------------------------------          ------------------------------------------------------------------
//             |     @      |     #      |     $      |     %      |     ^      |          |     &      |     *      |     (      |     )      |     _      |
//             |     !      |            |            |            |            |          |     "      |            |     [      |     ]      |     +      |
//             |            |            |            |            |            |          |     ~      |            |     {      |     }      |     |      |
//             --------------------------|            |            |            |          |            |            |            |--------------------------
//                                       ----------------------------------------          ---------------------------------------
    xxxxx        &kp AT       &kp HASH     &kp DLLR     &kp PRCNT    &kp CARET               &kp AMPS     &kp ASTRK    &kp LPAR     &kp RPAR     &kp UNDER    xxxxx
    xxxxx        &kp EXCL     &none        &none        &none        &none                   &kp DQT      &none        &kp LBKT     &kp RBKT     &kp PLUS     xxxxx
    xxxxx        &none        &none        &none        &none        &none                   &kp TILDE    &none        &kp LBRC     &kp RBRC     &kp PIPE     xxxxx
                                           &none        &none        &none                   &none        &none        &none
                >;
            };

            compose {
                label = "Compose";
                bindings = <
//             ------------------------------------------------------------------          ------------------------------------------------------------------
//             |     Ä      |            |            |            |            |          |            |            |            |     Ü      |     Ö      |
//             |            |            |     ß      |            |            |          |            |            |     É      |     Í      |            |
//             |            |            |            |            |            |          |            |            |            |            |            |
//             --------------------------|            |            |            |          |            |            |            |--------------------------
//                                       ----------------------------------------          ---------------------------------------
    xxxxx        &AE          &none        &none        &none        &none                   &none        &none        &none        &UE          &OE          xxxxx
    xxxxx        &none        &none        &SZ          &none        &none                   &none        &none        &EE          &IE          &none        xxxxx
    xxxxx        &none        &none        &none        &none        &none                   &none        &none        &none        &none        &none        xxxxx
                                           &none        &none        &none                   &none        &none        &none
                >;
            };

            wm_win {
                label = "WM: Win";
                bindings = <
//             ------------------------------------------------------------------          ------------------------------------------------------------------
//             |            |            |            |            |            |          |            |            |            |            |            |
//             |            |            |   START    |            |            |          |   PRV_D    |            |            |   NXT_D    |            |
//             |            |            |            |            |            |          |            |            |            |            |            |
//             --------------------------|            |            |            |          |            |            |            |--------------------------
//                                       ----------------------------------------          ---------------------------------------
    xxxxx        &bt BT_SEL 0 &none        &none        &none        &none                   &none        &none        &none        &none        &none        xxxxx
    xxxxx        &bt BT_NXT   &none        &kp LGUI     &none        &none                   &prev_desktop_win &none   &none        &next_desktop_win &none   xxxxx
    xxxxx        &none        &none        &none        &none        &none                   &none        &none        &none        &none        &none        xxxxx
                                           &none        &none        &bt BT_CLR              &none        &none        &none
                >;
            };

            steno {
                label = "Steno";
                bindings = <
//             ------------------------------------------------------------------          -------------------------------------------------------------------------------
//             |     2      |     3      |     4      |     5      | ARPEGGIATE |          |     7      |     8      |     9      |     0      |     -      |   PLOGGLE  |
//             |     Q      |     W      |     E      |     R      |     T      |          |     Y      |     U      |     I      |     O      |     P      |     [      |
//             |     A      |     S      |     D      |     F      |     G      |          |     H      |     J      |     K      |     L      |     ;      |     '      |
//             --------------------------|     C      |     V      |            |          |            |     N      |     M      |---------------------------------------
//                                       ----------------------------------------          ---------------------------------------
    xxxxx        &kp N2       &kp N3       &kp N4       &kp N5       &kp SPACE               &kp N7       &kp N8       &kp N9       &kp N0       &kp MINUS    &ploggle
    xxxxx        &kp Q        &kp W        &kp E        &kp R        &kp T                   &kp Y        &kp U        &kp I        &kp O        &kp P        &kp LBKT
    xxxxx        &kp A        &kp S        &kp D        &kp F        &kp G                   &kp H        &kp J        &kp K        &kp L        &kp SEMI     &kp SQT
                                           &none        &kp C        &kp V                   &kp N        &kp M        &none
                >;
            };
        };
//            <tmpl> {
//                label = "";
//                bindings = <
////             ------------------------------------------------------------------          ------------------------------------------------------------------
////             |            |            |            |            |            |          |            |            |            |            |            |
////             |            |            |            |            |            |          |            |            |            |            |            |
////             |            |            |            |            |            |          |            |            |            |            |            |
////             --------------------------|            |            |            |          |            |            |            |--------------------------
////                                       ----------------------------------------          ---------------------------------------
//    xxxxx        &none        &none        &none        &none        &none                   &none        &none        &none        &none        &none        xxxxx
//    xxxxx        &none        &none        &none        &none        &none                   &none        &none        &none        &none        &none        xxxxx
//    xxxxx        &none        &none        &none        &none        &none                   &none        &none        &none        &none        &none        xxxxx
//                                           &none        &none        &none                   &none        &none        &none
//                >;
//            };
//        };
};
